<?php

ini_set('assert.exception', 1);

$values = [
  [
    'a' => '0',
    'b' => '0',
    'sum' => '0'
  ],[
    'a' => '1',
    'b' => '1',
    'sum' => '2'
  ],[
    'a' => '999999999999999999999999',
    'b' => '99',
    'sum' => '1000000000000000000000098'
  ],[
    'a' => '99',
    'b' => '999999999999999999999999',
    'sum' => '1000000000000000000000098'
  ],[
    'a' => '9',
    'b' => '99',
    'sum' => '108'
  ],[
    'a' => '99',
    'b' => '9',
    'sum' => '108'
  ],[
    'a' => '99999999999999999999999999999999999999999999',
    'b' => '99999999999999999999999999999999999999999999',
    'sum' => '199999999999999999999999999999999999999999998'
  ],[
    'a' => '9999999999999999999999999999999999999999999',
    'b' => '99999999999999999999999999999999999999999999',
    'sum' => '109999999999999999999999999999999999999999998'
  ],[
    'a' => '99999999999999999999999999999999999999999999',
    'b' => '9999999999999999999999999999999999999999999',
    'sum' => '109999999999999999999999999999999999999999998'
  ],[
    'a' => '44444444444444444444444444444444444',
    'b' => '55555555555555555555555555555555555',
    'sum' => '99999999999999999999999999999999999'
  ]
];

require dirname(__FILE__).'/../src/bigintsum.php';

foreach($values as $v) {
  $sum = bigIntSum($v['a'], $v['b']);
  assert($sum === $v['sum'], msg($sum, $v));
  print('.');
}
print("\nAll tests complete successful.\n");

function msg(string $actual, array $expected) : string {
  return sprintf(
    "The actual sum %s does not equal the expected sum %s for %s + %s.\n",
    $actual,
    $expected['sum'],
    $expected['a'],
    $expected['b']
  );
}